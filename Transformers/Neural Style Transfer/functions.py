# -*- coding: utf-8 -*-
"""Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l5CbMVznsZwOz4WMQPoCV1rdX-eij7pM
"""

def Extract_FeatureMap(image, model):

  # initialize feature maps as a list

  featuremaps = []
  featureLayers = []

  Idx_Conv_Layer = 0

  # loop through all layers in the sequectial feature blocks

  for layer in range(len(model.features)):

    # process the image through this layer

    image = model.features[layer](image)

    # store the image only if it is a conv2d layer

    if 'Conv2d' in str(model.features[layer]):
      featuremaps.append( image )
      featureLayers.append( 'ConvLayer_' + str(Idx_Conv_Layer) )
      Idx_Conv_Layer += 1

  return featuremaps,featureLayers

import torch
def Gram_Matrix(Mat):

  samples, channels, height, width = Mat.shape
  Mat = Mat.reshape(channels, height * width)   # 4D to 2D reshaping
  gram_mat = torch.mm(Mat,Mat.T) / (channels * height * width)
  return gram_mat